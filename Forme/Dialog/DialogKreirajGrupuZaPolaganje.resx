<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="IdPolaznika.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDodajGrupuZaPolaganje.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>